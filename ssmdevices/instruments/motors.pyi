import labbench as lb
from typing import Any, Optional


class ETSLindgrenAzi2005(lb.VISADevice):

    def __init__(
        self,
        resource: str='str',
        read_termination: str='str',
        write_termination: str='str',
        timeout: str='int',
        baud_rate: str='int',
        parity: str='bytes',
        stopbits: str='int',
        xonxoff: str='bool',
        rtscts: str='bool',
        dsrdtr: str='bool'
    ):
        ...
    timeout: Any = ...
    baud_rate: Any = ...
    parity: Any = ...
    stopbits: Any = ...
    xonxoff: Any = ...
    rtscts: Any = ...
    dsrdtr: Any = ...
    read_termination: Any = ...
    write_termination: Any = ...

    def config(self, mode: Any) -> None:
        ...

    def whereami(self):
        ...

    def wheredoigo(self):
        ...

    def set_speed(self, value: Any) -> None:
        ...

    def set_limits(self, side: Any, value: Any) -> None:
        ...

    def set_position(self, value: Any) -> None:
        ...

    def seek(self, value: Any) -> None:
        ...

    def stop(self) -> None:
        ...
    speed: Any = ...
    cwlimit: Any = ...
    cclimit: Any = ...
    define_position: Any = ...
    position: Any = ...

    def set_key(self, key: Any, value: Any, trait_name: Optional[Any]=...) -> None:
        ...
