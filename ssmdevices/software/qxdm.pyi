import labbench as lb
from typing import Any, Optional


class QPST(lb.Win32ComDevice):

    def __init__(self, resource: str='str', com_object: str='str'):
        ...
    com_object: Any = ...

    def open(self) -> None:
        ...

    def close(self) -> None:
        ...

    def add_port(self, port: Any):
        ...

    def remove_port(self, port: Any) -> None:
        ...


class QXDM(lb.Win32ComDevice):

    def __init__(
        self,
        resource: str='str',
        com_object: str='str',
        cache_path: str='str',
        connection_timeout: str='int'
    ):
        ...
    com_object: Any = ...
    cache_path: Any = ...
    connection_timeout: Any = ...

    def open(self) -> None:
        ...
    ue_model_number: Any = ...
    ue_mode: Any = ...
    ue_imei: Any = ...
    ue_esn: Any = ...
    ue_build_id: Any = ...

    def get_key(self, key: Any, trait_name: Optional[Any]=...):
        ...

    def close(self) -> None:
        ...

    def configure(self, config_path: Any, min_acquisition_time: Optional[Any]=...) -> None:
        ...

    def save(self, path: Optional[Any]=..., saveNm: Optional[Any]=...):
        ...

    def start(self, wait: bool=...) -> None:
        ...

    def version(self):
        ...

    def reconnect(self) -> None:
        ...
